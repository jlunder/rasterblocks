// *
// * PRU_memAccessPRUDataRam.hp
// *
// * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
// *
// *
// *  Redistribution and use in source and binary forms, with or without
// *  modification, are permitted provided that the following conditions
// *  are met:
// *
// *    Redistributions of source code must retain the above copyright
// *    notice, this list of conditions and the following disclaimer.
// *
// *    Redistributions in binary form must reproduce the above copyright
// *    notice, this list of conditions and the following disclaimer in the
// *    documentation and/or other materials provided with the
// *    distribution.
// *
// *    Neither the name of Texas Instruments Incorporated nor the names of
// *    its contributors may be used to endorse or promote products derived
// *    from this software without specific prior written permission.
// *
// *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// *
// *

// *
// * ============================================================================
// * Copyright (c) Texas Instruments Inc 2010-12
// *
// * Use of this software is controlled by the terms and conditions found in the
// * license agreement under which this software has been supplied or provided.
// * ============================================================================
// *

// *****************************************************************************/
// file:   PRU_memAccessPRUDataRAM.hp
//
// brief:  PRU_memAccessPRUDataRam assembly constants.
//
//
//  (C) Copyright 2012, Texas Instruments, Inc
//
//  author     M. Watkins
//
//  version    0.1     Created
// *****************************************************************************/


#ifndef _PRU_memAccessPRUDataRAM_HP_
#define _PRU_memAccessPRUDataRAM_HP_


// ***************************************
// *      Global Macro definitions       *
// ***************************************

// Refer to this mapping in the file - \prussdrv\include\pruss_intc_mapping.h
#define PRU0_PRU1_INTERRUPT     17
#define PRU1_PRU0_INTERRUPT     18
#define PRU0_ARM_INTERRUPT      19
#define PRU1_ARM_INTERRUPT      20
#define ARM_PRU0_INTERRUPT      21
#define ARM_PRU1_INTERRUPT      22

#define CONST_INTC      C0
#define CONST_PRUCFG    C4
#define CONST_PRUDRAM   C24
#define CONST_L3RAM     C30
#define CONST_DDR       C31

// Address for the Constant table Programmable Pointer Register 0(CTPPR_0)
#define CTBIR_0         0x22020
// Address for the Constant table Programmable Pointer Register 0(CTPPR_0)
#define CTBIR_1         0x22024

// Address for the Constant table Programmable Pointer Register 0(CTPPR_0)
#define CTPPR_0         0x22028
// Address for the Constant table Programmable Pointer Register 1(CTPPR_1)
#define CTPPR_1         0x2202C


#define GPIO0             0x44E07000
#define GPIO1             0x4804C000
#define GPIO2             0x481AC000

#define GPIO_OE           0x134
#define GPIO_CLEARDATAOUT 0x190
#define GPIO_SETDATAOUT   0x194

#define GPIO_CLEARANDSET  0x190
#define CLEAR_OFS 0
#define SET_OFS 4


#define UART0            0x00028000

#define UART_RBR         0x00
#define UART_THR         0x00
#define UART_IER         0x04
#define UART_IIR         0x08
#define UART_FCR         0x08
#define UART_LCR         0x0C
#define UART_MCR         0x10
#define UART_LSR         0x14
#define UART_MSR         0x18
#define UART_SCR         0x1C
#define UART_DLL         0x20
#define UART_DLH         0x24
#define UART_REVID1      0x28
#define UART_REVID2      0x2C
#define UART_PWREMU_MGMT 0x30
#define UART_MDR         0x34

#define UART_FCR_RXFIFTL1  (0 << 6)
#define UART_FCR_RXFIFTL4  (1 << 6)
#define UART_FCR_RXFIFTL8  (2 << 6)
#define UART_FCR_RXFIFTL14 (3 << 6)
#define UART_FCR_DMAMODE1  (1 << 3)
#define UART_FCR_TXCLR     (1 << 2)
#define UART_FCR_RXCLR     (1 << 1)
#define UART_FCR_FIFOEN    (1 << 0)

#define UART_LCR_DLAB (1 << 7)
#define UART_LCR_BC   (1 << 6)
#define UART_LCR_SP   (1 << 5)
#define UART_LCR_EPS  (1 << 4)
#define UART_LCR_PEN  (1 << 3)
#define UART_LCR_STB  (1 << 2)
#define UART_LCR_WLS5 (0 << 0)
#define UART_LCR_WLS6 (1 << 0)
#define UART_LCR_WLS7 (2 << 0)
#define UART_LCR_WLS8 (3 << 0)

#define UART_MCR_AFE  (0 << 5)
#define UART_MCR_LOOP (0 << 4)
#define UART_MCR_OUT2 (0 << 3)
#define UART_MCR_OUT1 (0 << 2)
#define UART_MCR_RTS  (0 << 1)

#define UART_LSR_TEMT_BIT 6
#define UART_LSR_DR_BIT 0
#define UART_LSR_RXFIFOE (1 << 7)
#define UART_LSR_TEMT    (1 << UART_LSR_TEMT_BIT)
#define UART_LSR_THRE    (1 << 5)
#define UART_LSR_BI      (1 << 4)
#define UART_LSR_FE      (1 << 3)
#define UART_LSR_PE      (1 << 2)
#define UART_LSR_OE      (1 << 1)
#define UART_LSR_DR      (1 << UART_LSR_DR_BIT)

#define UART_PWREMU_MGMT_UTRST (1 << 14)
#define UART_PWREMU_MGMT_URRST (1 << 13)
#define UART_PWREMU_MGMT_FREE  (1 << 0)

#define UART_MDR_OSM_SEL (1 << 0)


#define GLOBAL_STATUS_RUN    0
#define GLOBAL_STATUS_HALT   1

#define FRAME_STATUS_MASK    0x03
#define FRAME_MODE_MASK      0x0C
#define FRAME_STATUS_IDLE    0x00
#define FRAME_STATUS_ERROR   0x01
#define FRAME_STATUS_READY   0x02
#define FRAME_MODE_2W_2MHZ   0x00
#define FRAME_MODE_2W_10MHZ  0x04
#define FRAME_MODE_1W_800KHZ 0x08
#define FRAME_MODE_PAUSE     0x10

#define MIDI_STATUS_EMPTY 0
#define MIDI_STATUS_FULL  1


.struct global_control
    .u32 status
.ends

.struct buffer_control
    .u32 status
    .u32 address
    .u32 size
    .u32 capacity
.ends


#define GLOBAL_OFS (0)
#define FRAME0_OFS (SIZE(global_control) + SIZE(buffer_control) * 0)
#define FRAME1_OFS (SIZE(global_control) + SIZE(buffer_control) * 1)
#define MIDI0_OFS  (SIZE(global_control) + SIZE(buffer_control) * 2)
#define MIDI1_OFS  (SIZE(global_control) + SIZE(buffer_control) * 3)


#endif //_PRU_memAccessPRUDataRAM_HP_
